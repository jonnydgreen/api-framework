{
  "tasks": {
    "ok": "deno task fmt && deno task lint && deno task check",
    "check": "deno check **/*.ts",
    "fmt": "deno fmt --check && deno task fmt:license-headers",
    "fmt:license-headers": "deno run --allow-read --allow-write ./_tools/check_license.ts",
    "lint": "deno lint && deno task lint:doc-imports && deno task lint:docs",
    "lint:doc-imports": "deno run --allow-env --allow-read ./_tools/check_doc_imports.ts",
    "lint:docs": "deno run -A _tools/check_docs.ts",
    "test": "deno test --parallel --doc --allow-write --allow-read --allow-run --allow-net=\"0.0.0.0,localhost,127.0.0.1\" --coverage=cov_profile --clean",
    "test:watch": "deno test --allow-write --allow-read --allow-run --allow-net=\"0.0.0.0,localhost,127.0.0.1\" --watch",
    "report": "deno task test && deno coverage --exclude=tests cov_profile --html && open cov_profile/html/index.html",
    "lcov": "deno coverage --exclude=tests cov_profile --lcov --output=cov_profile.lcov"
  },
  "lock": false,
  "imports": {
    "@deno/doc": "jsr:@deno/doc@0",
    "reflect-metadata": "npm:reflect-metadata@0",
    "inversify": "npm:inversify@6",
    "typescript": "npm:typescript@5",
    "zod": "https://deno.land/x/zod@v3.23.8/mod.ts",
    "@eyrie/app": "./mod.ts",
    "@examples/": "./examples/",
    "@std/assert": "jsr:@std/assert@1",
    "@std/fmt": "jsr:@std/fmt@1",
    "@std/fs": "jsr:@std/fs@1",
    "@std/http": "jsr:@std/http@1",
    "@std/log": "jsr:@std/log@0",
    "@std/path": "jsr:@std/path@1",
    "@std/semver": "jsr:@std/semver@1",
    "@std/testing": "jsr:@std/testing@1"
  },
  "compilerOptions": {
    "strict": true,
    "useUnknownInCatchVariables": true,
    "noImplicitOverride": true,
    "noUncheckedIndexedAccess": true
  },
  "exclude": [
    ".git",
    "cov_profile",
    "spikes",
    "docs/designs"
  ],
  "lint": {
    "rules": {
      "include": [
        "camelcase",
        "no-sync-fn-in-async-fn",
        "single-var-declarator",
        "verbatim-module-syntax"
      ]
    }
  }
}
